//~~tv:20010.20140827
//~~tc: Tealium Custom Container

/*
  Tealium Custom Container Notes:
  - Add sending code between "Start Tag Sending Code" and "End Tag Sending Code".
  - Add JavaScript tag library code between "Start Tag Library Code" and "End Tag Library Code".
  - Add JavaScript code only, do not add HTML code in this file.
  - Remove any <script> and </script> tags from the code you place in this file.

  Loading external JavaScript files (Loader):
  - If you need to load an additional external JavaScript file, un-comment the singe-line JavaScript comments ("//") within the following Loader sections near the bottom of this file:
      - "Start Loader Function Call"
      - "End Loader Function Call"
      - "Start Loader Callback Function"
      - "End Loader Callback Function"
  - After un-commenting, insert the path to the external JavaScript file you want to load.
  - Finally, within the Loader callback function, insert the JavaScript code that should run after the external JavaScript file has loaded.
*/

/* Start Tag Library Code */
/* End Tag Library Code */

//tealium universal tag - utag.sender.custom_container ut4.0.##UTVERSION##, Copyright ##UTYEAR## Tealium.com Inc. All Rights Reserved.
try {
    (function (id, loader) {
      var u = {};
      utag.o[loader].sender[id] = u;
  
      // Start Tealium loader 4.32
      // Please do not modify
      if (utag === undefined) { utag = {}; } if (utag.ut === undefined) { utag.ut = {}; } if (utag.ut.loader === undefined) { u.loader = function (o) { var a, b, c, l; a = document; if (o.type === "iframe") { b = a.createElement("iframe"); b.setAttribute("height", "1"); b.setAttribute("width", "1"); b.setAttribute("style", "display:none"); b.setAttribute("src", o.src); } else if (o.type === "img") { utag.DB("Attach img: " + o.src); b = new Image(); b.src = o.src; return; } else { b = a.createElement("script"); b.language = "javascript"; b.type = "text/javascript"; b.async = 1; b.charset = "utf-8"; b.src = o.src; } if (o.id) { b.id = o.id; } if (typeof o.cb === "function") { if (b.addEventListener) { b.addEventListener("load", function () { o.cb(); }, false); } else { b.onreadystatechange = function () { if (this.readyState === "complete" || this.readyState === "loaded") { this.onreadystatechange = null; o.cb(); } }; } } l = o.loc || "head"; c = a.getElementsByTagName(l)[0]; if (c) { utag.DB("Attach to " + l + ": " + o.src); if (l === "script") { c.parentNode.insertBefore(b, c); } else { c.appendChild(b); } } }; } else { u.loader = utag.ut.loader; }
      // End Tealium loader
  
      u.ev = {'view' : 1, 'link' : 1};
  
      u.initialized = false;
  
      ##UTGEN##
  
      u.send = function(a, b) {
        if (u.ev[a] || u.ev.all !== undefined) {
          //##UTENABLEDEBUG##utag.DB("send:##UTID##");
  
          var c, d, e, f, i;
  
          u.data = {
            /* Initialize default tag parameter values here */
            /* Examples: */
            /* "account_id" : "1234567" */
             "base_url" : "https://cdn.treasuredata.com/sdk/2.5/td.min.js" 
            /* A value mapped to "account_id" or "base_url" in TiQ will replace these default values. */
          };
  
  
          /* Start Tag-Scoped Extensions Code */
          /* Please Do Not Edit This Section */
          ##UTEXTEND##
          /* End Tag-Scoped Extensions Code */
  
  
          /* Start Mapping Code */
          for (d in utag.loader.GV(u.map)) {
            if (b[d] !== undefined && b[d] !== "") {
              e = u.map[d].split(",");
              for (f = 0; f < e.length; f++) {
                u.data[e[f]] = b[d];
              }
            }
          }
          /* End Mapping Code */
  
  
          /* Start Tag Sending Code */
  
            // Insert your tag sending code here.
            ! function (t, e) {
              if (void 0 === e[t]) {
                  e[t] = function () {
                      e[t].clients.push(this), this._init = [Array.prototype.slice.call(arguments)]
                  }, e[t].clients = [];
                  for (var r = function (t) {
                      return function () {
                          return this["_" + t] = this["_" + t] || [], this["_" + t].push(Array.prototype.slice.call(arguments)), this
                      }
                  }, s = ["addRecord", "blockEvents", "fetchServerCookie", "fetchGlobalID", "fetchUserSegments", "resetUUID", "ready", "setSignedMode", "setAnonymousMode", "set", "trackEvent", "trackPageview", "trackClicks", "unblockEvents"], n = 0; n < s.length; n++) {
                      var c = s[n];
                      e[t].prototype[c] = r(c)
                  }
                  /*var o = document.createElement("script");
                  o.type = "text/javascript", o.async = !0, o.src = ("https:" === document.location.protocol ? "https:" : "http:") + "//cdn.treasuredata.com/sdk/2.5/td.min.js";
                  var a = document.getElementsByTagName("script")[0];
                  a.parentNode.insertBefore(o, a)*/
              }
          }("Treasure", this);
  
          /* End Tag Sending Code */
  
  
          /* Start Loader Callback Function */
          /* Un-comment the single-line JavaScript comments ("//") to use this Loader callback function. */
  
          u.loader_cb = function () {
            u.initialized = true;
              
                      /*BEGIN INITIALIZE*/
             if (window.td == undefined){
              var dynamicWriteKey = b.tealium_environment == "prod" ? "12125/a4c44d2b735ac4a5e13b3eae090142e4d48e5800" : '12125/a4c44d2b735ac4a5e13b3eae090142e4d48e5800'
              var dynamicDatabase = b.tealium_environment == "prod" ? "prod_source" : 'dev_source'
  
              var td = new Treasure({
              host: 'in.treasuredata.com/',
              writeKey: dynamicWriteKey,
              database: dynamicDatabase});
          
              window.td = td
          
  
              /*END INITIALIZE*/
  
              /* BEGIN ONE TRUST*/
              var oneTrustResponse = b['cp.OptanonConsent']
  
              if (oneTrustResponse != undefined) {
                  if (oneTrustResponse.toLowerCase().indexOf("c0004") > -1) {
                      td.setSignedMode()
                      console.debug('Tealium Status: Treasure Data Initialization: setting signed mode oneTrustResponse is ' +oneTrustResponse);
                  } else {
                      td.setAnonymousMode()
                      console.debug('Tealium Status: Treasure Data Initialization: setting anon mode oneTrustResponse is ' +oneTrustResponse);
                  }
              }
              else{
                  td.setSignedMode();
                          console.debug('Tealium Status: Treasure Data Initialization: setting signed mode because oneTrustResponse is not there' +oneTrustResponse);
              
              }
              /* END ONE TRUST*/
              
              /* BEGIN SET*/
              td.set('$global', 'td_global_id', 'td_global_id');
              /* BEGIN SEGMENT FETCH*/
              var SuccessCallback = function (res) {
  
                  function isEmpty(obj) {
                      return Object.keys(obj).length === 0;
                  }
                  var segments = res[0].values
                  segments = isEmpty(segments) ? "Segments Blank" : segments.toString()
                  var attributes = res[0].attributes
                  attributes = isEmpty(attributes) ? "Attributes Blank" : JSON.stringify(attributes)
                  console.debug("Tealium Status: Treasure Data Segments: " + segments)
                  console.debug("Tealium Status: Treasure Data Attributes:" + attributes)
                  utag_data.td_attributes = attributes
                  utag_data.td_segments = segments
                  localStorage.setItem("td_segments", segments)
                  localStorage.setItem("td_attributes", attributes)
              }
              
              var myLookupCookie = b['cp.cp_rwd_id']
  
              window.td.fetchUserSegments({
                  'audienceToken': ['e8b9ab34-0a30-4106-ac63-1d21f2664b4a'],
              
                  keys: {
                      'cp_rwd_id': myLookupCookie,
                  }
              }, SuccessCallback);}
              /* END SEGMENT FETCH*/
  
              if (window.td) {
                  console.debug("Treasure data window.td exists")
                  //Create an object of arrays... Exclude any local storage values ("ls."), and live person analytics values
  
                  var data_array = Object.entries(b).filter(([key]) => !key.startsWith("ls.") && !key.startsWith("livePersonAnalytics")&& !key.startsWith("ss.")&& !key.startsWith("meta."));
                  
       
                   var payload = {};
                   for (let i = 0; i < data_array.length - 1; i++) {
                       payload[data_array[i][0]] = b[data_array[i][0]];
                     }  
                     if (b.tealium_event == "view"){
                     //send TD pageview
                       trackTreasureData("view",payload)
                    
                     }
                       else {
                        trackTreasureData("link",payload)
  
                       }
                     }
          };
  
          function trackTreasureData(event_type, data_package)
          {
            setTimeout(function () {
              switch (event_type){
                case "view":
                  td.trackEvent("td_celebrity_sdk_webdl",data_package)
                  console.debug("Treasure data TE is view")
                  break;
                case "link":
                  td.trackEvent("td_celebrity_sdk_link_clicks",data_package)
                  console.debug("Treasure data TE is link")
                  break;
              }
          }, 1000);
  
          }
          /* End Loader Callback Function */
  
  
          /* Start Loader Function Call */
          /* Un-comment the single-line JavaScript comments ("//") to use Loader. */
  
            if (!u.initialized) {
              //u.loader({"type" : "iframe", "src" : u.data.base_url + c.join(u.data.qsp_delim), "cb" : u.loader_cb, "loc" : "body", "id" : 'utag_##UTID##' });
              u.loader({"type" : "script", "src" : u.data.base_url, "cb" : u.loader_cb, "loc" : "script", "id" : 'utag_##UTID##' });
  
  
            } else {
              u.loader_cb();
            }
  
            //u.loader({"type" : "img", "src" : u.data.base_url + c.join(u.data.qsp_delim) });
  
          /* End Loader Function Call */
  
  
          //##UTENABLEDEBUG##utag.DB("send:##UTID##:COMPLETE");
        }
      };
      utag.o[loader].loader.LOAD(id);
    })("##UTID##", "##UTLOADERID##");
  } catch (error) {
    utag.DB(error);
  }
  //end tealium universal tag
  
  
